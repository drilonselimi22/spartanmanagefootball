// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpartanManageFootball.Persistence;

#nullable disable

namespace SpartanManageFootball.Migrations
{
    [DbContext(typeof(SMFContext))]
    [Migration("20220511112352_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SpartanManageFootball.Models.League", b =>
                {
                    b.Property<int>("LeagueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeagueId"), 1L, 1);

                    b.Property<string>("LeagueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeagueId");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatchId"), 1L, 1);

                    b.Property<int>("EkipiMusafirTeamId")
                        .HasColumnType("int");

                    b.Property<int>("EkipiVendasTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MatchId");

                    b.HasIndex("EkipiMusafirTeamId");

                    b.HasIndex("EkipiVendasTeamId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SquadTeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SquadTeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.Referee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeagueId")
                        .HasColumnType("int");

                    b.Property<int?>("MatchId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.HasIndex("MatchId");

                    b.ToTable("Referees");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.SpartanAgent", b =>
                {
                    b.Property<int>("Email")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Email"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("SpartanAgents");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.Squad", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeagueId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StadiumId")
                        .HasColumnType("int");

                    b.HasKey("TeamId");

                    b.HasIndex("LeagueId");

                    b.ToTable("Squads");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.SquadAdmin", b =>
                {
                    b.Property<int>("Email")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Email"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("SquadAdmins");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.Stadium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stadiums");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.Match", b =>
                {
                    b.HasOne("SpartanManageFootball.Models.Squad", "EkipiMusafir")
                        .WithMany()
                        .HasForeignKey("EkipiMusafirTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpartanManageFootball.Models.Squad", "EkipiVendas")
                        .WithMany()
                        .HasForeignKey("EkipiVendasTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EkipiMusafir");

                    b.Navigation("EkipiVendas");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.Player", b =>
                {
                    b.HasOne("SpartanManageFootball.Models.Squad", null)
                        .WithMany("Players")
                        .HasForeignKey("SquadTeamId");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.Referee", b =>
                {
                    b.HasOne("SpartanManageFootball.Models.League", null)
                        .WithMany("Referees")
                        .HasForeignKey("LeagueId");

                    b.HasOne("SpartanManageFootball.Models.Match", null)
                        .WithMany("Referees")
                        .HasForeignKey("MatchId");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.Squad", b =>
                {
                    b.HasOne("SpartanManageFootball.Models.League", null)
                        .WithMany("Squads")
                        .HasForeignKey("LeagueId");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.League", b =>
                {
                    b.Navigation("Referees");

                    b.Navigation("Squads");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.Match", b =>
                {
                    b.Navigation("Referees");
                });

            modelBuilder.Entity("SpartanManageFootball.Models.Squad", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
